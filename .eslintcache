[{"/Users/janmanuelbrenner/Desktop/dev/janmanuelbrenner/tempberry_frontend/src/App.js":"1","/Users/janmanuelbrenner/Desktop/dev/janmanuelbrenner/tempberry_frontend/src/ChartView.js":"2","/Users/janmanuelbrenner/Desktop/dev/janmanuelbrenner/tempberry_frontend/src/index.js":"3","/Users/janmanuelbrenner/Desktop/dev/janmanuelbrenner/tempberry_frontend/src/DayView.js":"4","/Users/janmanuelbrenner/Desktop/dev/janmanuelbrenner/tempberry_frontend/src/NotFound.js":"5","/Users/janmanuelbrenner/Desktop/dev/janmanuelbrenner/tempberry_frontend/src/Welcome.js":"6","/Users/janmanuelbrenner/Desktop/dev/janmanuelbrenner/tempberry_frontend/src/Info.js":"7","/Users/janmanuelbrenner/Desktop/dev/janmanuelbrenner/tempberry_frontend/src/TempBerry.js":"8","/Users/janmanuelbrenner/Desktop/dev/janmanuelbrenner/tempberry_frontend/src/TBNavBar.js":"9","/Users/janmanuelbrenner/Desktop/dev/janmanuelbrenner/tempberry_frontend/src/GlobalNavBar.js":"10"},{"size":542,"mtime":1607604678020,"results":"11","hashOfConfig":"12"},{"size":899,"mtime":1607604120549,"results":"13","hashOfConfig":"12"},{"size":386,"mtime":1606836747388,"results":"14","hashOfConfig":"12"},{"size":4466,"mtime":1606835016713,"results":"15","hashOfConfig":"12"},{"size":78,"mtime":1607603733944,"results":"16","hashOfConfig":"12"},{"size":323,"mtime":1607604344148,"results":"17","hashOfConfig":"12"},{"size":929,"mtime":1607606283606,"results":"18","hashOfConfig":"12"},{"size":410,"mtime":1607604650431,"results":"19","hashOfConfig":"12"},{"size":538,"mtime":1607604663562,"results":"20","hashOfConfig":"12"},{"size":458,"mtime":1607604881252,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6stjhr",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/janmanuelbrenner/Desktop/dev/janmanuelbrenner/tempberry_frontend/src/App.js",[],"/Users/janmanuelbrenner/Desktop/dev/janmanuelbrenner/tempberry_frontend/src/ChartView.js",[],"/Users/janmanuelbrenner/Desktop/dev/janmanuelbrenner/tempberry_frontend/src/index.js",[],"/Users/janmanuelbrenner/Desktop/dev/janmanuelbrenner/tempberry_frontend/src/DayView.js",["43"],"import { useEffect, useState } from 'react';\nimport { CartesianGrid, Legend, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\n\n\nexport default function DayView(props) {\n  const [allDayObjects, setAllDayObjects] = useState(undefined)\n  /* EXAMPLE OF allDayObjects:\n\n  {\n    date: [\n      {\n        time: time,\n        temp: temperature,\n        hum: humidity\n      },\n      {\n        time: time,\n        temp: temperature,\n        hum: humidity\n      },\n      {...}\n    ],\n\n    date: [\n      {\n        time: time,\n        temp: temperature,\n        hum: humidity\n      },\n      {\n        time: time,\n        temp: temperature,\n        hum: humidity\n      },\n      {...}\n    ],\n\n    ...\n\n  }\n\n\n   */\n\n\n\n  const [selectedDay, setSelectedDay] = useState(undefined)\n\n  const setDayObjects = () => {\n    const dayObjects = {}\n    let oldDay = 0\n\n    for (const dateTimeStamp of Object.keys(props.data)) {\n      let day = dateTimeStamp.slice(0, 6)\n      let time = dateTimeStamp.slice(6)\n      let temperature = props.data[dateTimeStamp].temp\n      let hum = props.data[dateTimeStamp].hum\n\n      if (oldDay !== day) {\n\n        oldDay = day\n        dayObjects[oldDay] = [{ time: transformTime(time), temp: temperature.toFixed(1), hum: hum.toFixed(1) }]\n\n      } else {\n        dayObjects[oldDay].push({ time: transformTime(time), temp: temperature.toFixed(1), hum: hum.toFixed(1) })\n      }\n    }\n\n    setAllDayObjects(dayObjects)\n  }\n\n\n  useEffect(() => {\n    setDayObjects()\n  }, [])\n\n\n  const transformDate = (date) => {\n    const year = date.toString().slice(0, 2)\n    const month = date.toString().slice(2, 4)\n    const day = date.toString().slice(4, 6)\n    return `${day}.${month}.${year}`\n  }\n\n  const transformTime = (time) => {\n    const hour = time.toString().slice(0, 2)\n    const minute = time.toString().slice(2, 4)\n    return `${hour}:${minute} Uhr`\n  }\n\n\n  if (!selectedDay && allDayObjects) {\n    return (\n      <div className=\"dayviewbox\">\n        <div className=\"dayviewcontrols\">\n          <select onChange={e => setSelectedDay(e.target.value)}>\n            <option disabled selected value=\"selectDay\">Select Day</option>\n            {Object.keys(allDayObjects).map(date => {\n              return (\n                <option value={date}>{transformDate(date)}</option>\n              )\n            })}\n          </select>\n        </div>\n      </div>\n    )\n  } else if (allDayObjects) {\n    return (\n      <div className=\"dayviewbox\">\n        <div className=\"dayviewcontrols\">\n          <select onChange={e => setSelectedDay(e.target.value)}>\n            <option disabled selected value=\"selectDay\">Select Day</option>\n            {Object.keys(allDayObjects).map(date => {\n              return (\n                <option value={date}>{transformDate(date)}</option>\n              )\n            })}\n          </select>\n        </div>\n        <div className=\"dayviewchart\">\n          <div className=\"timeline\">\n            <div className=\"timestamp\">~ 0:00 Uhr</div>\n            <div className=\"timestamp\">~ 6:00 Uhr</div>\n            <div className=\"timestamp\">~ 12:00 Uhr</div>\n            <div className=\"timestamp\">~ 18:00 Uhr</div>\n            <div className=\"timestamp\">~ 24:00 Uhr</div>\n          </div>\n          <ResponsiveContainer width={\"100%\"} height={\"100%\"}>\n            <LineChart\n              data={allDayObjects[selectedDay]}\n              margin={{\n                top: 20, right: 10, left: 10, bottom: 20,\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis\n                dataKey=\"time\"\n                hide={true}\n              />\n              <YAxis\n                yAxisId=\"left\"\n                type=\"number\"\n                domain={[18, 25]}\n                interval={0}\n                tickCount={16}\n              />\n              <YAxis\n                yAxisId=\"right\"\n                orientation=\"right\"\n                type=\"number\"\n                domain={[20, 60]}\n                interval={0}\n                tickCount={30}\n              />\n              <Tooltip />\n              <Legend />\n              <Line yAxisId=\"left\" type=\"monotone\" dataKey=\"temp\" stroke=\"#ff0000\" dot={false} />\n              <Line yAxisId=\"right\" type=\"monotone\" dataKey=\"hum\" stroke=\"#0000ff\" dot={false} />\n            </LineChart>\n\n          </ResponsiveContainer>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <>Loading Data</>\n    )\n  }\n};\n","/Users/janmanuelbrenner/Desktop/dev/janmanuelbrenner/tempberry_frontend/src/NotFound.js",[],"/Users/janmanuelbrenner/Desktop/dev/janmanuelbrenner/tempberry_frontend/src/Welcome.js",[],"/Users/janmanuelbrenner/Desktop/dev/janmanuelbrenner/tempberry_frontend/src/Info.js",[],"/Users/janmanuelbrenner/Desktop/dev/janmanuelbrenner/tempberry_frontend/src/TempBerry.js",[],"/Users/janmanuelbrenner/Desktop/dev/janmanuelbrenner/tempberry_frontend/src/TBNavBar.js",[],"/Users/janmanuelbrenner/Desktop/dev/janmanuelbrenner/tempberry_frontend/src/GlobalNavBar.js",[],{"ruleId":"44","severity":1,"message":"45","line":75,"column":6,"nodeType":"46","endLine":75,"endColumn":8,"suggestions":"47"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setDayObjects'. Either include it or remove the dependency array.","ArrayExpression",["48"],{"desc":"49","fix":"50"},"Update the dependencies array to be: [setDayObjects]",{"range":"51","text":"52"},[1504,1506],"[setDayObjects]"]